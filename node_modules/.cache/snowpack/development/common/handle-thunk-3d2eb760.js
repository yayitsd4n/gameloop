import { d as isThunk_1, c as isVnode, b as isVtext, a as isWidget_1 } from './is-thunk-23e4fadc.js';

var isObject = function isObject(x) {
	return typeof x === 'object' && x !== null;
};

var handleThunk_1 = handleThunk;

function handleThunk(a, b) {
    var renderedA = a;
    var renderedB = b;

    if (isThunk_1(b)) {
        renderedB = renderThunk(b, a);
    }

    if (isThunk_1(a)) {
        renderedA = renderThunk(a, null);
    }

    return {
        a: renderedA,
        b: renderedB
    }
}

function renderThunk(thunk, previous) {
    var renderedThunk = thunk.vnode;

    if (!renderedThunk) {
        renderedThunk = thunk.vnode = thunk.render(previous);
    }

    if (!(isVnode(renderedThunk) ||
            isVtext(renderedThunk) ||
            isWidget_1(renderedThunk))) {
        throw new Error("thunk did not return a valid node");
    }

    return renderedThunk
}

export { handleThunk_1 as h, isObject as i };
